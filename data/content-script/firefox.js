// Generated by CoffeeScript 1.4.0
(function() {
  var HashLockFirefoxHandler, handler,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  HashLockFirefoxHandler = (function(_super) {

    __extends(HashLockFirefoxHandler, _super);

    function HashLockFirefoxHandler() {
      return HashLockFirefoxHandler.__super__.constructor.apply(this, arguments);
    }

    HashLockFirefoxHandler.prototype.hashPasswordAsync = function(password, callback) {
      var _this = this;
      self.port.emit("hashRequest", password);
      return self.port.once("hashResponse", function(hashed_password) {
        console.log("Received response: " + hashed_password);
        return callback(hashed_password);
      });
    };

    return HashLockFirefoxHandler;

  })(HashLockAbstractHandler);

  handler = new HashLockFirefoxHandler();

}).call(this);
